/// <reference types="lodash" />
import { Terminal as XTerm } from "xterm";
import { FitAddon } from "xterm-addon-fit";
import { TabId } from "./dock.store";
import { TerminalApi } from "../../api/terminal-api";
import { SerializeAddon } from "xterm-addon-serialize";
import { WebLinksAddon } from "xterm-addon-web-links";
export declare class Terminal {
    tabId: TabId;
    protected api: TerminalApi;
    static spawningPool: HTMLElement;
    static init(): void;
    xterm: XTerm;
    fitAddon: FitAddon;
    serializeAddon: SerializeAddon;
    webLinksAddon: WebLinksAddon;
    scrollPos: number;
    disposers: Function[];
    protected setTheme(colors?: {
        [key: string]: string;
        blue: string;
        magenta: string;
        golden: string;
        halfGray: string;
        primary: string;
        textColorPrimary: string;
        textColorSecondary: string;
        textColorAccent: string;
        borderColor: string;
        borderFaintColor: string;
        mainBackground: string;
        contentColor: string;
        layoutBackground: string;
        layoutTabsBackground: string;
        layoutTabsActiveColor: string;
        layoutTabsLineColor: string;
        sidebarLogoBackground: string;
        sidebarActiveColor: string;
        sidebarSubmenuActiveColor: string;
        sidebarBackground: string;
        buttonPrimaryBackground: string;
        buttonDefaultBackground: string;
        buttonAccentBackground: string;
        buttonDisabledBackground: string;
        tableBgcStripe: string;
        tableBgcSelected: string;
        tableHeaderBackground: string;
        tableHeaderBorderWidth: string;
        tableHeaderBorderColor: string;
        tableHeaderColor: string;
        tableSelectedRowColor: string;
        helmLogoBackground: string;
        helmImgBackground: string;
        helmStableRepo: string;
        helmIncubatorRepo: string;
        helmDescriptionHr: string;
        helmDescriptionBlockqouteColor: string;
        helmDescriptionBlockqouteBorder: string;
        helmDescriptionBlockquoteBackground: string;
        helmDescriptionHeaders: string;
        helmDescriptionH6: string;
        helmDescriptionTdBorder: string;
        helmDescriptionTrBackground: string;
        helmDescriptionCodeBackground: string;
        helmDescriptionPreBackground: string;
        helmDescriptionPreColor: string;
        colorSuccess: string;
        colorOk: string;
        colorInfo: string;
        colorError: string;
        colorSoftError: string;
        colorWarning: string;
        colorVague: string;
        colorTerminated: string;
        dockHeadBackground: string;
        dockInfoBackground: string;
        dockInfoBorderColor: string;
        terminalBackground: string;
        terminalForeground: string;
        terminalCursor: string;
        terminalCursorAccent: string;
        terminalSelection: string;
        terminalBlack: string;
        terminalRed: string;
        terminalGreen: string;
        terminalYellow: string;
        terminalBlue: string;
        terminalMagenta: string;
        terminalCyan: string;
        terminalWhite: string;
        terminalBrightBlack: string;
        terminalBrightRed: string;
        terminalBrightGreen: string;
        terminalBrightYellow: string;
        terminalBrightBlue: string;
        terminalBrightMagenta: string;
        terminalBrightCyan: string;
        terminalBrightWhite: string;
        dialogTextColor: string;
        dialogBackground: string;
        dialogHeaderBackground: string;
        dialogFooterBackground: string;
        drawerTogglerBackground: string;
        drawerTitleText: string;
        drawerSubtitleBackground: string;
        drawerItemNameColor: string;
        drawerItemValueColor: string;
        boxShadow: string;
        iconActiveColor: string;
        iconActiveBackground: string;
        filterAreaBackground: string;
        chartLiveBarBackgound: string;
        chartStripesColor: string;
        chartCapacityColor: string;
        pieChartDefaultColor: string;
        selectOptionHoveredColor: string;
        lineProgressBackground: string;
        radioActiveBackground: string;
    }): void;
    get elem(): HTMLElement;
    get viewport(): Element;
    constructor(tabId: TabId, api: TerminalApi);
    get isActive(): boolean;
    attachTo(parentElem: HTMLElement): void;
    detach(): void;
    init(): void;
    destroy(): void;
    fit: () => void;
    fitLazy: import("lodash").DebouncedFunc<() => void>;
    focus: () => void;
    onApiData: (data: string) => void;
    onData: (data: string) => void;
    onScroll: () => void;
    onClear: () => void;
    onResize: () => void;
    onActivate: () => void;
    onClickLink: (evt: MouseEvent, link: string) => void;
    keyHandler: (evt: KeyboardEvent) => boolean;
}
